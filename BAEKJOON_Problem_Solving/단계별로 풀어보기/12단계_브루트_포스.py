# -*- coding: utf-8 -*-
"""12단계 브루트 포스.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1w56ziOANc5CKCgigiw1ZjGlJ-jaIioZM
"""

#2798
n, m = map(int, input().split())
card = list(map(int, input().split()))

max_value = 0
for i in range(n):
    for j in range(i+1, n):
        for k in range(j+1, n):
            if card[i] + card[j] + card[k] > m:
                continue
            max_value = max(max_value, card[i] + card[j] + card[k])
print(max_value)

#2231
n = int(input())
result = 0
for i in range(1, n+1):
    result = i + sum(map(int, str(i)))
    if result == n:
        print(i)
        break
    if i == n:
        print(0)

#19532
a,b,c,d,e,f = map(int, input().split())
for x in range(-999, 1000):
    for y in range(-999, 1000):
        if a*x + b*y == c and d*x + e*y == f:
            print(x, y)
            exit()

#1018
n, m = map(int, input().split())
board = []
for i in range(n):
    board.append(input())

min_count = 64
for i in range(n-7):
    for j in range(m-7):
        count1 = 0
        count2 = 0
        for a in range(i, i+8):
            for b in range(j, j+8):
                if (a+b) % 2 == 0:
                    if board[a][b] != 'W':
                        count1 += 1
                    if board[a][b] != 'B':
                        count2 += 1
                else:
                    if board[a][b] != 'B':
                        count1 += 1
                    if board[a][b] != 'W':
                        count2 += 1
        min_count = min(min_count, count1, count2)
print(min_count)


#BWBWBW or WBWBWB 답 중 하나니까, 각각을 cnt1, cnt2로 세어본다.

#1436
n = int(input())
num = 666
count = 0
while True:
    if '666' in str(num):
        count += 1
    if count == n:
        print(num)
        break
    num += 1

#2839
n = int(input())
count = 0
while n >= 0:
    if n % 5 == 0:
        count += (n // 5)
        print(count)
        break
    n -= 3
    count += 1
else:
    print(-1)